def alphabet: 1"prio":['abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'...];
templates toPrio
  def item: $::raw;
  $alphabet -> \[i](when <=$item> do $i!\) -> $(first)!
end toPrio

composer parseRucksackEntry
  {contents: [<'\w+'>...]}
end parseRucksackEntry

def table: {| 0:[$IN::lines -> parseRucksackEntry] -> \[i]({$..., elf: $i, group: $i ~/ 3}!\)...
-> \({elf: $.elf, group: $.group, by $.contents(first..last~/2)... -> {item: $, compartment: 'left'}}!
{elf: $.elf, group: $.group, by $.contents(last~/2~..last)... -> {item: $, compartment: 'right'}}!\)|};

source solutionPart1
  ($table({elf:,item:,compartment:}) divide&{over: $table({elf:, item:})} $table({compartment:, elf:}))... -> $.item -> toPrio -> ..=Sum&{of::()}!
end solutionPart1

source solutionPart2
  ($table({elf:,item:,group:}) divide&{over: $table({group:, item:})} $table({group:, elf:}))... -> $.item -> toPrio -> ..=Sum&{of::()}!
end solutionPart2

'$:'part' -> SYS::property;' -> \(
  when <='part1'|=''> do $solutionPart1 !
  when <='part2'> do $solutionPart2 !
  otherwise 'Unknown part $;' !
\) -> '$;
' -> !OUT::write
